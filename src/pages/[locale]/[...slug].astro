---
import { getEntry, render } from 'astro:content';

import { getPageId, getPagePath } from '@/collections/page.collection';
import type { SEOProps as AstroSEOProps } from 'astro-seo';
import { createSEOProps } from '@/seo';

import Layout from '@/layouts/layout.astro';
import { Accordion, AccordionItem } from '@/components/content/accordion';
import { Button } from '@/components/content/button';
import { Container } from '@/components/content/container';
import { Form } from '@/components/content/form';
import { Frame } from '@/components/content/frame';
import { Grid } from '@/components/content/grid';
import { Icon } from '@/components/content/icon';
import { Kbd } from '@/components/content/kbd';
import { Section } from '@/components/content/section';
import { Style } from '@/components/content/style';

const { locale, slug } = Astro.params;
if (slug === 'index') {
  return Astro.redirect('/');
}
const id = getPageId(locale, slug);
const page = await getEntry('pages', id);
if (!page) {
  return Astro.rewrite(`/404?locale=${Astro.currentLocale}`);
}
const { Content } = await render(page);
const languageAlternates: AstroSEOProps['languageAlternates'] =
  page.data.locales.map((entry) => ({
    href: new URL(getPagePath(entry.ref), Astro.site),
    hrefLang: entry.locale,
  }));
if (Astro.site) {
  languageAlternates.push({
    href: Astro.site,
    hrefLang: 'x-default',
  });
}
const seo = createSEOProps(Astro.url, {
  title: page.data.title,
  description: page.data.description,
  languageAlternates,
  ...page.data.seo,
});
---

<Layout {seo}>
  <Content
    components={{
      Accordion,
      AccordionItem,
      Button,
      Container,
      Form,
      Frame,
      Grid,
      Icon,
      Kbd,
      Section,
      Style,
    }}
  />
</Layout>
