---
import type { ImageMetadata } from 'astro';
import { Picture } from 'astro:assets';

import type { Theme } from '@/theme';

import { frameVariant, type FrameProps } from './frame.variant';

type FrameImage = {
  theme: Theme;
  src: string;
  alt: string;
};
type Props = FrameProps & {
  images: Array<FrameImage>;
  caption?: string;
  lazy: boolean;
};

const { caption, images, lazy } = Astro.props;
const contentImages = import.meta.glob<{ default: ImageMetadata }>(
  '/src/assets/images/content/**/*.{jpeg,jpg,png,gif}'
);
const imageMetaDataEntries = (
  await Promise.all(
    images
      .filter((image) => !!contentImages[image.src])
      .map((image) => contentImages[image.src]())
  )
).map((value) => value.default);
---

{
  imageMetaDataEntries.map((imageMetaData, index) => {
    if (!imageMetaData) {
      return;
    }
    const image = images[index];
    return (
      <figure
        x-show={`$store.theme.get() === "${image.theme}" || ${images.length} === 1`}
        x-cloak
      >
        <Picture
          class:list={[frameVariant(Astro.props)]}
          src={import.meta.env.DEV ? image.src : imageMetaData.src}
          alt={image.alt}
          width={imageMetaData.width}
          height={imageMetaData.height}
          formats={['webp']}
          loading={lazy ? 'lazy' : 'eager'}
          fetchpriority={!lazy ? 'high' : undefined}
        />
        {caption && <figcaption class='pt-1 pl-4'>{caption}</figcaption>}
      </figure>
    );
  })
}
