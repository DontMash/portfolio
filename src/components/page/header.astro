---
import { getEntry } from 'astro:content';
import { Icon } from 'astro-icon/components';

import {
  defaultLocale,
  getLabelForLocale,
  useTranslation,
  type LocaleCode,
} from '@/i18n';

import Button from '@/components/content/button.astro';
import { button } from '@/components/content/button';
import Logo from '@/components/logo.astro';

const currentLocale =
  (Astro.currentLocale as LocaleCode | undefined) ?? defaultLocale;
const t = useTranslation(currentLocale);

const { locale, slug } = Astro.params;
const page = await getEntry('pages', slug ? `${locale}/${slug}` : `${locale}`);
---

<header class='bg-background sticky top-0 left-0 z-50 border-b-3' role='banner'>
  <nav
    class='mx-auto flex h-20 max-w-screen-xl items-center px-4 sm:px-12'
    aria-label={t('header.nav.label')}
  >
    <Logo />

    <div class='ml-auto flex items-center gap-8'>
      {
        page && page.data.locales.length && (
          <select class:list={[button({ kind: 'link' })]} name='lang' data-lang>
            <option label={getLabelForLocale(currentLocale)} value={page.id}>
              {getLabelForLocale(currentLocale)}
            </option>

            {page.data.locales.map((entry) => (
              <option
                label={getLabelForLocale(entry.locale)}
                value={entry.ref.replace('/index', '')}
              >
                {getLabelForLocale(entry.locale)}
              </option>
            ))}
          </select>
        )
      }
      <div class='hidden sm:block'>
        <Button href={`/${Astro.currentLocale}/#form`}>
          <Icon name='tabler:at' size={24} />
          <span>{t('header.nav.cta')}</span>
        </Button>
      </div>
    </div>
  </nav>
</header>

<script>
  const select = document.querySelector<HTMLSelectElement>('[data-lang]');
  if (!select) {
    throw new Error('Language select not available');
  }
  select.addEventListener('change', (event) => {
    if (!event.currentTarget) {
      return;
    }
    const element = event.currentTarget as HTMLSelectElement;
    const href = element.value;
    location.pathname = href;
  });
</script>
